实时展现热门文章:8小时点击量最大的文章前100名.

	思路1: redis的sortedset
	思路2:
		分析:动态窗口 时间长,量大,用户访问量大
		数据接收:
			1m/s的点击并发量,需要分布式.客户端为了减轻服务器的压力,选择延迟合并进行批量发送.
		
			服务器部署多台机器部署多进程接受请求,请求进行参数解析后,发送到存储单元,
			每个进程使用小窗口聚合数据,每隔一小段时间将窗口内的数据聚合起来发送给存储单元
		
		数据存储:
			点击数据是很重要的数据,获取用户的兴趣偏好,如果全用内存存储,成本过高,不能完全使用redis
			
			使用kafka存储数据,ZeroCopy机制的并发量很高,数据持久化在磁盘的成本低,kafka的数据室友过期时间的,
			做长期的数据分析,则需要使用hdfs.
			
			要做实时数据统计,hdfs不行,hdfs适合做离线数据统计.
			
			==kafka实时接收数据,消费者一边入hdfs,一边做实时统计.
			实时统计,可以使用spark Stream storm接收kafka的输入,也可以自己手写.
		用户问题:
			分布式TopN算法
			
		多个子表:遍历查询,对结果做聚合结果,做TopN查询
		
		实时刷新:
			对每一条记录设置过期时间,定期扫描过期时间,
			
		定时任务:定期从子节点拉取数据
		
		散列:
			每个节点只负责一部分文章的统计,,相同文章的id点击流入相同的分区,保证一篇文章流向同一个统一子节点
		服务器宕机:
			实时做一个checkpoint ,当当前的状态持久到本地文件或者数据库中,
			
		点击去重:
			1.恶意点击
			2.回味点击
				策略对访问ip的限制,通过用户反馈机制的人工干预
			
			
			
			
			
		
		