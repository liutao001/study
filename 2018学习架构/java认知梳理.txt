java内存模型

1.jvm的虚拟机的内存空间分为5个部分
	程序计数器:
		是一块较小的内存空间,可以认为为当前线程正在执行的字节码的行号指示器;记录的是当前线程正在执
		行的那一条字节码指令的地址
			如果线程运行的是本地方法,此时程序计数器为空.
		作用:字节码解释器通过改变程序计数器依次来读取指令,从而实现代码的流程控制,顺序执行,选择,循环,异常处理
		     
		     多线程情况下,程序计数器用于记录当前线程所执行的位置,当线程被切换回来,能够记录该线程的运行位置.
		特点:是一块较小的存储空间,线程私有,每个线程有一个程序计数器,是唯一的不会出现内存溢出的内初区域.
		     生命周期随着线程的创建而创建,销毁而销毁. 	
	java虚拟机栈:
		描述java方法运行过程的内存模型.
		为每一个方法创建一个叫做栈帧的区域;包含运行的信息:
			局部变量表,基本数据类型变量,引用数据类型变量,返回地址类型的变量,操作数栈,动态链接,方法出口信息
		特点:
			局部变量表实在方法执行时,随着栈帧的创建而创建, 大小在编译器就确定了,创建时只需分配规定大小,在运行时,局部变量标的大小是不会改变的.
			异常:栈的内存不允许动态扩展,栈的深度超过最大深度时,就会抛出Stack Overflowerror
			     当内存用完了,抛出内存溢出,
			线程私有的	   
	
	本地方法栈:
		是本地方法运行的内存模型,其他的同java虚拟机栈
	堆:
		存放对象的内存空间,所有的对象存放在堆中
		线程共享,只有一个堆,所有线程都访问一个堆,虚拟机启动时创建,垃圾回收的主要场所.
		细分,新生代,老年代
			新生代Eden ,From survior, to survior
			不同区域存放不同生命周期的对象,使用不同的垃圾回收算法,
			对的大小可以扩展亦可以固定,无法扩展时,抛出内存溢出
	方法区:方法区是堆的逻辑部分,线程共享,整个虚拟中只有一个方法区,
		存放已被加载的类信息,常量,静态变量,编译后的代码.
		永久代:	需要长期存储,是堆的逻辑分区也叫做年老代
		
		内存回收效率低,,主要目标是,对常量池的回收和对类型的卸载
	运行时常量池: 常量存储在运行处时常量池中
